#! /usr/bin/env python
# -*- coding: utf-8 -*-

#This is the main file to launch the program

import os, argparse, sys

from gi.repository import Gtk

try:
    # Try the non-PIP case.
    from el_ui import eltuxusb 
    from el_cmd import el_cmd
except ImportError:
    # Maybe it's a PIP-installed package.
    from eltuxusb.el_ui import eltuxusb
    from eltuxusb.el_cmd import el_cmd

pathname = os.path.dirname(sys.argv[0])
full_path = os.path.abspath(pathname)
os.chdir(full_path)

if __name__ == '__main__':

    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--debug', action="store_true", help="show useful informations for the developpers (do not write anything to the device)")
    parser.add_argument('-D', '--download', help="download the recordings to a file, ex: /home/user/out.txt")
    parser.add_argument('-R', '--recover',  help="!WARNING! reprogram the device configuration from the given file ex: /home/user/config.txt !WARNING!")
    parser.add_argument('-v', '--version', action="store_true", help="show program version and exit")
    args = parser.parse_args()
                    
    if args.version:
        print "eltuxusb version 5.0 \n"	
        sys.exit(0)

    if args.debug:
        print "#DEBUG# Starting eltuxusb in debug mode (nothing will be written on the device)"

    if args.download:
        app = el_cmd(path=args.download, debug=args.debug, recover_mode=False)
        app.download()

    if args.recover:
        app = el_cmd(path=args.recover, debug=args.debug, recover_mode=True)
        app.recover()

    else:
        app = eltuxusb(debug=args.debug, recover_mode=False).refresh()
        Gtk.main()


